_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[23],{"59oN":function(e,n,t){"use strict";var a=t("q1tI"),r=t.n(a),i=t("qKvR");r.a.createElement;n.a=function(e){var n=e.children;return Object(i.a)("div",{className:"my-8 px-6 py-4 text-orange-900 text-base leading-normal bg-orange-200 rounded-r border-l-4 border-orange-400",children:n})}},Ukga:function(e,n,t){"use strict";t.r(n),t.d(n,"meta",(function(){return f})),t.d(n,"default",(function(){return C}));var a=t("h4VS"),r=t("wx14"),i=t("Ff2n"),o=t("q1tI"),s=t.n(o),l=t("7ljp"),c=t("B+lO"),p=t.n(c),b=t("5Yp1"),u=t("59oN"),d=t("SrvX");t("qKvR"),s.a.createElement;function m(){var e=Object(a.a)(["\n        import { Inertia } from '@inertiajs/inertia'\n\n        Inertia.get(url, data, options)\n        Inertia.post(url, data, options)\n        Inertia.put(url, data, options)\n        Inertia.patch(url, data, options)\n        Inertia.delete(url, options)\n        Inertia.replace(url, options)\n        Inertia.reload(options) // Uses the current URL\n      "],["\n        import { Inertia } from '@inertiajs/inertia'\\n\n        Inertia.get(url, data, options)\n        Inertia.post(url, data, options)\n        Inertia.put(url, data, options)\n        Inertia.patch(url, data, options)\n        Inertia.delete(url, options)\n        Inertia.replace(url, options)\n        Inertia.reload(options) // Uses the current URL\n      "]);return m=function(){return e},e}function h(){var e=Object(a.a)(["\n        import { Inertia } from '@inertiajs/inertia'\n\n        Inertia.get(url, data, options)\n        Inertia.post(url, data, options)\n        Inertia.put(url, data, options)\n        Inertia.patch(url, data, options)\n        Inertia.delete(url, options)\n        Inertia.replace(url, options)\n        Inertia.reload(options) // Uses the current URL\n      "],["\n        import { Inertia } from '@inertiajs/inertia'\\n\n        Inertia.get(url, data, options)\n        Inertia.post(url, data, options)\n        Inertia.put(url, data, options)\n        Inertia.patch(url, data, options)\n        Inertia.delete(url, options)\n        Inertia.replace(url, options)\n        Inertia.reload(options) // Uses the current URL\n      "]);return h=function(){return e},e}function j(){var e=Object(a.a)(["\n        // import { Inertia } from '@inertiajs/inertia'\n\n        this.$inertia.get(url, data, options)\n        this.$inertia.post(url, data, options)\n        this.$inertia.put(url, data, options)\n        this.$inertia.patch(url, data, options)\n        this.$inertia.delete(url, options)\n        this.$inertia.replace(url, options)\n        this.$inertia.reload(options) // Uses the current URL\n      "],["\n        // import { Inertia } from '@inertiajs/inertia'\\n\n        this.$inertia.get(url, data, options)\n        this.$inertia.post(url, data, options)\n        this.$inertia.put(url, data, options)\n        this.$inertia.patch(url, data, options)\n        this.$inertia.delete(url, options)\n        this.$inertia.replace(url, options)\n        this.$inertia.reload(options) // Uses the current URL\n      "]);return j=function(){return e},e}function O(){var e=Object(a.a)(["\n        import { Inertia } from '@inertiajs/inertia'\n\n        Inertia.visit(url, {\n          method: 'get',\n          data: {},\n          replace: false,\n          preserveState: false,\n          preserveScroll: false,\n          only: [],\n          headers: {},\n          onCancelToken: cancelToken => {},\n          onCancel: () => {},\n          onStart: visit => {},\n          onProgress: progress => {},\n          onSuccess: page => {},\n          onFinish: () => {},\n        })\n      "],["\n        import { Inertia } from '@inertiajs/inertia'\\n\n        Inertia.visit(url, {\n          method: 'get',\n          data: {},\n          replace: false,\n          preserveState: false,\n          preserveScroll: false,\n          only: [],\n          headers: {},\n          onCancelToken: cancelToken => {},\n          onCancel: () => {},\n          onStart: visit => {},\n          onProgress: progress => {},\n          onSuccess: page => {},\n          onFinish: () => {},\n        })\n      "]);return O=function(){return e},e}function g(){var e=Object(a.a)(["\n        import { Inertia } from '@inertiajs/inertia'\n\n        Inertia.visit(url, {\n          method: 'get',\n          data: {},\n          replace: false,\n          preserveState: false,\n          preserveScroll: false,\n          only: [],\n          headers: {},\n          onCancelToken: cancelToken => {},\n          onCancel: () => {},\n          onStart: visit => {},\n          onProgress: progress => {},\n          onSuccess: page => {},\n          onFinish: () => {},\n        })\n      "],["\n        import { Inertia } from '@inertiajs/inertia'\\n\n        Inertia.visit(url, {\n          method: 'get',\n          data: {},\n          replace: false,\n          preserveState: false,\n          preserveScroll: false,\n          only: [],\n          headers: {},\n          onCancelToken: cancelToken => {},\n          onCancel: () => {},\n          onStart: visit => {},\n          onProgress: progress => {},\n          onSuccess: page => {},\n          onFinish: () => {},\n        })\n      "]);return g=function(){return e},e}function v(){var e=Object(a.a)(["\n        // import { Inertia } from '@inertiajs/inertia'\n\n        this.$inertia.visit(url, {\n          method: 'get',\n          data: {},\n          replace: false,\n          preserveState: false,\n          preserveScroll: false,\n          only: [],\n          headers: {},\n          onCancelToken: cancelToken => {},\n          onCancel: () => {},\n          onStart: visit => {},\n          onProgress: progress => {},\n          onSuccess: page => {},\n          onFinish: () => {},\n        })\n      "],["\n        // import { Inertia } from '@inertiajs/inertia'\\n\n        this.$inertia.visit(url, {\n          method: 'get',\n          data: {},\n          replace: false,\n          preserveState: false,\n          preserveScroll: false,\n          only: [],\n          headers: {},\n          onCancelToken: cancelToken => {},\n          onCancel: () => {},\n          onStart: visit => {},\n          onProgress: progress => {},\n          onSuccess: page => {},\n          onFinish: () => {},\n        })\n      "]);return v=function(){return e},e}var f={title:"Manual visits",links:[{url:"#method",name:"Method"},{url:"#data",name:"Data"},{url:"#browser-history",name:"Browser history"},{url:"#component-state",name:"Component state"},{url:"#scroll-preservation",name:"Scroll preservation"},{url:"#partial-reloads",name:"Partial reloads"},{url:"#custom-headers",name:"Custom headers"},{url:"#visit-cancellation",name:"Visit cancellation"},{url:"#event-callbacks",name:"Event callbacks"},{url:"#promise-deprecation",name:"Promise deprecation"}]},N={meta:f},I=b.b;function C(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(l.b)(I,Object(r.a)({},N,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h1",null,"Manual visits"),Object(l.b)("p",null,"In addition to ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"/links"}),"creating links"),", it's also possible to manually make Inertia visits. This is done using the ",Object(l.b)("inlineCode",{parentName:"p"},"Inertia.visit()")," method."),Object(l.b)(d.a,{examples:[{name:"Vue.js",language:"js",code:p()(v())},{name:"React",language:"js",code:p()(g())},{name:"Svelte",language:"js",code:p()(O())}],mdxType:"TabbedCodeExamples"}),Object(l.b)("p",null,"However, generally it's preferred to use one of the shortcut methods instead. These methods share all the same options as ",Object(l.b)("inlineCode",{parentName:"p"},"Inertia.visit()"),"."),Object(l.b)(d.a,{examples:[{name:"Vue.js",language:"js",code:p()(j())},{name:"React",language:"js",code:p()(h())},{name:"Svelte",language:"js",code:p()(m())}],mdxType:"TabbedCodeExamples"}),Object(l.b)("h2",null,"Method"),Object(l.b)("p",null,"Use the ",Object(l.b)("inlineCode",{parentName:"p"},"method")," option to set the request method to ",Object(l.b)("inlineCode",{parentName:"p"},"get"),", ",Object(l.b)("inlineCode",{parentName:"p"},"post"),", ",Object(l.b)("inlineCode",{parentName:"p"},"put"),", ",Object(l.b)("inlineCode",{parentName:"p"},"patch")," or ",Object(l.b)("inlineCode",{parentName:"p"},"delete"),". The default is ",Object(l.b)("inlineCode",{parentName:"p"},"get"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.visit(url, { method: 'post' })\n")),Object(l.b)("h2",null,"Data"),Object(l.b)("p",null,"Use the ",Object(l.b)("inlineCode",{parentName:"p"},"data")," option to add data to the request."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.visit('/users', {\n  method: 'post',\n  data: {\n    name: 'John Doe',\n    email: 'john.doe@example.com',\n  },\n})\n")),Object(l.b)("p",null,"As a convenience, the ",Object(l.b)("inlineCode",{parentName:"p"},"get()"),", ",Object(l.b)("inlineCode",{parentName:"p"},"post()"),", ",Object(l.b)("inlineCode",{parentName:"p"},"put()")," and ",Object(l.b)("inlineCode",{parentName:"p"},"patch()")," methods all include ",Object(l.b)("inlineCode",{parentName:"p"},"data")," as the second argument."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.post('/users', {\n  name: 'John Doe',\n  email: 'john.doe@example.com',\n})\n")),Object(l.b)("h2",null,"Browser history"),Object(l.b)("p",null,"When making visits, Inertia automatically adds a new entry into the browser history. However, it's also possible to replace the current history entry using by setting the ",Object(l.b)("inlineCode",{parentName:"p"},"replace")," option to ",Object(l.b)("inlineCode",{parentName:"p"},"true"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.get('/users', { search: 'John' }, { replace: true })\n")),Object(l.b)("p",null,"As a shortcut, you can use ",Object(l.b)("inlineCode",{parentName:"p"},"replace()")," method to automatically do this."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.replace('/users', { search: 'John' })\n")),Object(l.b)(u.a,{mdxType:"Notice"},"Note that visits made to the same URL (including query strings) automatically set ",Object(l.b)("inlineCode",null,"replace")," to"," ",Object(l.b)("inlineCode",null,"true"),"."),Object(l.b)("h2",null,"Component state"),Object(l.b)("p",null,"By default page visits to the same page force a fresh page component instance, which clears out any local state, such as form inputs, scroll positions and focus states."),Object(l.b)("p",null,"In certain situations it's necessary to preserve the page component state. For example, when submitting a form, you need to preserve your form data in the event that validation errors come back."),Object(l.b)("p",null,"This can be done by setting the ",Object(l.b)("inlineCode",{parentName:"p"},"preserveState")," option to ",Object(l.b)("inlineCode",{parentName:"p"},"true"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.get('/users', { search: 'John' }, { preserveState: true })\n")),Object(l.b)("p",null,"For convenience, the ",Object(l.b)("inlineCode",{parentName:"p"},"post()"),", ",Object(l.b)("inlineCode",{parentName:"p"},"put()"),", ",Object(l.b)("inlineCode",{parentName:"p"},"patch()")," and ",Object(l.b)("inlineCode",{parentName:"p"},"replace()")," methods autmatically set ",Object(l.b)("inlineCode",{parentName:"p"},"preserveState")," to ",Object(l.b)("inlineCode",{parentName:"p"},"true"),"."),Object(l.b)("h2",null,"Scroll preservation"),Object(l.b)("p",null,"When navigating between pages, Inertia mimics default browser behaviour by automatically resetting the scroll position of the document body (as well as any ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"/scroll-management#scroll-regions"}),"scroll regions")," you've defined), back to the top. Use the ",Object(l.b)("inlineCode",{parentName:"p"},"preserveScroll")," option to disable this behaviour."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.visit(url, { preserveScroll: true })\n")),Object(l.b)("p",null,"For more information, see the ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"/scroll-management"}),"scroll management")," page."),Object(l.b)("h2",null,"Partial reloads"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"only")," option allows you to request a subset of the props (data) from the server on subsequent visits to the same page."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.visit('/users', { search: 'John' }, { only: ['users'] })\n")),Object(l.b)("p",null,"For more information, see the ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"/partial-reloads"}),"partial reloads")," page."),Object(l.b)("h2",null,"Custom headers"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"headers")," option allows you to add custom headers to a request."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.post('/users', data, {\n  headers: {\n    'Custom-Header': 'value',\n  },\n})\n")),Object(l.b)(u.a,{mdxType:"Notice"},"The Inertia headers take priority and therefore cannot be overwritten."),Object(l.b)("h2",null,"Visit cancellation"),Object(l.b)("p",null,"You can cancel a visit using a cancel token, which Inertia automatically generates and provides via the ",Object(l.b)("inlineCode",{parentName:"p"},"onCancelToken()")," callback prior to making the visit."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.post('/users', data, {\n  onCancelToken: cancelToken => (this.cancelToken = cancelToken),\n})\n\n// Cancel the visit\nthis.cancelToken.cancel()\n")),Object(l.b)("p",null,"When a visit is cancelled, both the ",Object(l.b)("inlineCode",{parentName:"p"},"onCancel()")," and ",Object(l.b)("inlineCode",{parentName:"p"},"onFinish()")," event callbacks will be called."),Object(l.b)("h2",null,"Event callbacks"),Object(l.b)("p",null,"In addition to the ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"/events"}),"global events"),", Inertia also provides a number of per-visit event callbacks."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.post('/users', data, {\n  onStart: visit => {},\n  onProgress: progress => {},\n  onSuccess: page => {},\n  onCancel: () => {},\n  onFinish: () => {},\n})\n")),Object(l.b)("p",null,"Returning ",Object(l.b)("inlineCode",{parentName:"p"},"false")," from the ",Object(l.b)("inlineCode",{parentName:"p"},"onStart()")," callback will cause the visit to be cancelled."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.delete(`/users/${user.id}`, {\n  onStart: () => confirm('Are you sure you want to delete this user?'),\n})\n")),Object(l.b)("p",null,"It's also possible to return a promise from the ",Object(l.b)("inlineCode",{parentName:"p"},"onSuccess()"),' callback. This will delay the "finish" event until the promise has resolved.'),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.post(url, {\n  onSuccess: () => {\n    return Promise.all([\n      this.doThing(),\n      this.doAnotherThing()\n    ])\n  }\n  onFinish: () => {\n    // This won't be called until doThing()\n    // and doAnotherThing() have finished.\n  },\n})\n")),Object(l.b)("h2",null,"Promise deprecation"),Object(l.b)("p",null,"As of ",Object(l.b)("inlineCode",{parentName:"p"},"v0.3.0"),", Inertia deprecated the promise that is returned from ",Object(l.b)("inlineCode",{parentName:"p"},"Inertia.visit()"),". If you call ",Object(l.b)("inlineCode",{parentName:"p"},"then()"),", ",Object(l.b)("inlineCode",{parentName:"p"},"catch()")," or ",Object(l.b)("inlineCode",{parentName:"p"},"finally()")," on an Inertia visit, you will now get the following console warning:"),Object(l.b)("div",{class:"py-4 px-6 border-l-4 border-orange-300 bg-orange-100 text-orange-900 text-sm font-mono"},Object(l.b)("div",null,"Inertia.js visit promises have been deprecated and will be removed in a future release. Please use the new visit event callbacks instead."),Object(l.b)("div",{class:"mt-4"},"Learn more at https://inertiajs.ru/manual-visits#promise-deprecation")),Object(l.b)("p",null,"The preferred approach is to use the new ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"#event-callbacks"}),"event callbacks")," instead. For example, instead of using ",Object(l.b)("inlineCode",{parentName:"p"},"then()"),", use the ",Object(l.b)("inlineCode",{parentName:"p"},"onSuccess()")," callback."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.post('/profile', data, {\n  onSuccess: () => {\n    // Handle success event\n  },\n})\n")),Object(l.b)("p",null,"Instead of using ",Object(l.b)("inlineCode",{parentName:"p"},"finally()"),", use the ",Object(l.b)("inlineCode",{parentName:"p"},"onFinish()")," callback."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.post('/profile', data, {\n  onFinish: () => {\n    // Handle finish event\n  },\n})\n")),Object(l.b)("p",null,"And instead of using ",Object(l.b)("inlineCode",{parentName:"p"},"catch()"),", it's better to handle these unexpected errors using a global error event handler."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"Inertia.on('error', event => {\n  event.preventDefault()\n  // Handle the error yourself\n})\n")))}C.isMDXComponent=!0},iU9h:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/manual-visits",function(){return t("Ukga")}])}},[["iU9h",0,2,5,1,3,4]]]);