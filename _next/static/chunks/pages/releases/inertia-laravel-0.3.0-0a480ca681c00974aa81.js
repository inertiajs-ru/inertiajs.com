_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[88],{"7TCn":function(e,n,t){"use strict";t.r(n),t.d(n,"meta",(function(){return o})),t.d(n,"default",(function(){return b}));var a=t("wx14"),r=t("Ff2n"),i=t("q1tI"),s=t.n(i),l=t("7ljp"),p=t("5Yp1"),o=(t("qKvR"),s.a.createElement,{title:"inertia-laravel@v0.3.0"}),u={meta:o},d=p.b;function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(l.b)(d,Object(a.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h1",null,"inertia-laravel@v0.3.0"),Object(l.b)("div",{className:"-mt-8 mb-12 text-base font-medium text-gray-600"},"Published on October 14, 2020"),Object(l.b)("h2",null,"Creating new middleware"),Object(l.b)("p",null,"This release removes the automatic registration of the Inertia middleware. Instead, there is a new command for generating your own ",Object(l.b)("inlineCode",{parentName:"p"},"HandleInertiaRequests")," middleware:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"php artisan inertia:middleware\n")),Object(l.b)("h2",null,"Registering new middleware"),Object(l.b)("p",null,"Once you've generated the new middleware, be sure to register the ",Object(l.b)("inlineCode",{parentName:"p"},"HandleInertiaRequests")," middleware in your ",Object(l.b)("inlineCode",{parentName:"p"},"App\\Http\\Kernel")," file as the ",Object(l.b)("em",{parentName:"p"},"last item")," in your ",Object(l.b)("inlineCode",{parentName:"p"},"web")," middleware group."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-diff"}),"protected $middlewareGroups = [\n    'web' => [\n        ...\n        \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n+       \\App\\Http\\Middleware\\HandleInertiaRequests::class,\n    ],\n")),Object(l.b)("h2",null,"Using the new middleware"),Object(l.b)("p",null,"This middleware provides a ",Object(l.b)("inlineCode",{parentName:"p"},"version()")," method for setting your asset version, and a ",Object(l.b)("inlineCode",{parentName:"p"},"share()")," method for setting the props that are shared by default. This provides a better approach than doing this in your ",Object(l.b)("inlineCode",{parentName:"p"},"AppServiceProvider")," using the ",Object(l.b)("inlineCode",{parentName:"p"},"Inertia::version()")," and ",Object(l.b)("inlineCode",{parentName:"p"},"Inertia::share()")," helpers."),Object(l.b)("p",null,"Here's the complete example of how to use the new ",Object(l.b)("inlineCode",{parentName:"p"},"HandleInertiaRequests")," middleware:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Illuminate\\Http\\Request;\nuse Inertia\\Middleware;\n\nclass HandleInertiaRequests extends Middleware\n{\n    /**\n     * Determines the current asset version.\n     *\n     * @see https://inertiajs.com/asset-versioning\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return string|null\n     */\n    public function version(Request $request)\n    {\n        return parent::version($request);\n    }\n\n    /**\n     * Defines the props that are shared by default.\n     *\n     * @see https://inertiajs.com/shared-data\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n    public function share(Request $request)\n    {\n        return array_merge(parent::share($request), [\n            'auth' => fn () => [\n                'user' => optional($request->user())->only(['name', 'email']),\n            ],\n            'flash' => fn () => $request->session()->only(['success', 'error']),\n        ]);\n    }\n}\n")))}b.isMDXComponent=!0},lIYr:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/releases/inertia-laravel-0.3.0",function(){return t("7TCn")}])}},[["lIYr",0,2,5,1,3,4]]]);