_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[166],{M9LY:function(e,t,a){"use strict";a.r(t),a.d(t,"meta",(function(){return o})),a.d(t,"default",(function(){return m}));var r=a("wx14"),i=a("Ff2n"),n=a("q1tI"),b=a.n(n),l=a("7ljp"),s=a("5Yp1"),o=(a("qKvR"),b.a.createElement,{title:"inertia-vue@v0.5.6"}),c={meta:o},p=s.b;function m(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(l.b)(p,Object(r.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",null,"inertia-vue@v0.5.6"),Object(l.b)("div",{className:"-mt-8 mb-12 text-base font-medium text-gray-600"},"Published on March 26, 2021"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Updated form helper to automatically remember form data (",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/inertiajs/inertia/pull/575"}),"#575"),")."),Object(l.b)("li",{parentName:"ul"},"Added new form helper options (",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/inertiajs/inertia/pull/575"}),"#575"),")."),Object(l.b)("li",{parentName:"ul"},"Fixed bug with remembering ",Object(l.b)("inlineCode",{parentName:"li"},"null")," form data (",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/inertiajs/inertia/issues/417"}),"#417"),", ",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/inertiajs/inertia/pull/575"}),"#575"),")."),Object(l.b)("li",{parentName:"ul"},"Fixed bug with accessing form state in visit callbacks (",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/inertiajs/inertia/pull/410"}),"#410"),")."),Object(l.b)("li",{parentName:"ul"},"Fixed bug with deep cloning default form data (",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/inertiajs/inertia/issues/455"}),"#455"),", ",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/inertiajs/inertia/pull/575"}),"#575"),")."),Object(l.b)("li",{parentName:"ul"},"Fixed bug with remembering array form values (",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/inertiajs/inertia/issues/552"}),"#552"),", ",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/inertiajs/inertia/pull/575"}),"#575"),")."),Object(l.b)("li",{parentName:"ul"},"Fixed bug with resetting array form values (",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/inertiajs/inertia/issues/553"}),"#553"),", ",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/inertiajs/inertia/pull/575"}),"#575"),")."),Object(l.b)("li",{parentName:"ul"},"Added Cypress test suite (",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/inertiajs/inertia/pull/395"}),"#395"),").")),Object(l.b)("h2",null,"Automatic remembering of form data"),Object(l.b)("p",null,"The form helper now automatically remembers form data and errors. Previously you had to do this manually:"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"remember: 'form'\n")),Object(l.b)("p",null,"Doing this automatically is not only easier, but it's also more in line with default browser behaviour."),Object(l.b)("p",null,"If you need to disable this behaviour, you can do that using the new ",Object(l.b)("inlineCode",{parentName:"p"},"remember")," form helper option (see below)."),Object(l.b)("h2",null,"Form helper options"),Object(l.b)("p",null,'The form helper now accepts a second "options" argument. This lets you set a form ',Object(l.b)("inlineCode",{parentName:"p"},"key"),", needed if there are multiple forms on the page. You can also disable the automatic remember behaviour by setting the ",Object(l.b)("inlineCode",{parentName:"p"},"remember")," option to ",Object(l.b)("inlineCode",{parentName:"p"},"false"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"this.$inertia.form({\n  email: null,\n  password: null,\n}, {\n  key: 'login',\n  remember: false,\n})\n")),Object(l.b)("h2",null,"Fixed issue with accessing form state in visit callbacks"),Object(l.b)("p",null,"This release fixes a tricky, edge case issue with the form helper, where the ",Object(l.b)("inlineCode",{parentName:"p"},"preserveState")," and ",Object(l.b)("inlineCode",{parentName:"p"},"preserveScroll")," visit callbacks didn't have access to the updated form state until it was too late."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"preserveScroll: () => this.form.hasErrors, // old form values\npreserveState: () => this.form.hasErrors,  // old form values\n")),Object(l.b)("p",null,"The workaround was to use the ",Object(l.b)("inlineCode",{parentName:"p"},"page")," object passed to these callbacks instead. Unfortunately, this is kind of verbose."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"preserveScroll: (page) => Object.keys(page.props.errors).length > 0,\npreserveState: (page) => Object.keys(page.props.errors).length > 0,\n")),Object(l.b)("p",null,"This issue has now been corrected, and you can reference the form helper methods and properties directly within these callbacks without issue."))}m.isMDXComponent=!0},MObs:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/releases/inertia-vue-0.5.6",function(){return a("M9LY")}])}},[["MObs",0,2,5,1,3,4]]]);