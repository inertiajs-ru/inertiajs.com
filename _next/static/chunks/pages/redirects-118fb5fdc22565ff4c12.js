_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[26],{bzJn:function(e,n,r){"use strict";r.r(n),r.d(n,"meta",(function(){return j})),r.d(n,"default",(function(){return w}));var t=r("wx14"),a=r("h4VS"),i=r("Ff2n"),s=r("q1tI"),o=r.n(s),l=r("7ljp"),c=r("B+lO"),u=r.n(c),d=r("5Yp1"),p=r("SrvX");r("qKvR"),o.a.createElement;function b(){var e=Object(a.a)(["\n        # todo\n      "]);return b=function(){return e},e}function m(){var e=Object(a.a)(["\n        return Inertia::location($url);\n      "]);return m=function(){return e},e}function f(){var e=Object(a.a)(["\n        class UsersController < ApplicationController\n          def index\n            render inertia: 'Users/Index', props: {users: User.all}\n          end\n\n          def create\n            User.create params.require(:user).permit(:name, :email)\n\n            redirect_to users_path\n          end\n        end\n      "],["\n        class UsersController < ApplicationController\n          def index\n            render inertia: 'Users/Index', props: {users: User.all}\n          end\\n\n          def create\n            User.create params.require(:user).permit(:name, :email)\\n\n            redirect_to users_path\n          end\n        end\n      "]);return f=function(){return e},e}function h(){var e=Object(a.a)(["\n        class UsersController extends Controller\n        {\n            public function index()\n            {\n                return Inertia::render('Users/Index', [\n                    'users' => User::all(),\n                ]);\n            }\n\n            public function store()\n            {\n                User::create(\n                    Request::validate([\n                        'name' => ['required', 'max:50'],\n                        'email' => ['required', 'max:50', 'email'],\n                    ])\n                );\n\n                return Redirect::route('users');\n            }\n        }\n      "],["\n        class UsersController extends Controller\n        {\n            public function index()\n            {\n                return Inertia::render('Users/Index', [\n                    'users' => User::all(),\n                ]);\n            }\\n\n            public function store()\n            {\n                User::create(\n                    Request::validate([\n                        'name' => ['required', 'max:50'],\n                        'email' => ['required', 'max:50', 'email'],\n                    ])\n                );\\n\n                return Redirect::route('users');\n            }\n        }\n      "]);return h=function(){return e},e}var j={title:"Redirects",links:[{url:"#top",name:"Making redirects"},{url:"#303-response-code",name:"303 response code"},{url:"#external-redirects",name:"External redirects"}]},x={meta:j},O=d.b;function w(e){var n=e.components,r=Object(i.a)(e,["components"]);return Object(l.b)(O,Object(t.a)({},x,r,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h1",null,"Redirects"),Object(l.b)("p",null,"When making a non-GET Inertia request, via ",Object(l.b)("inlineCode",{parentName:"p"},"<inertia-link>")," or manually, be sure to always respond with a proper Inertia response."),Object(l.b)("p",null,'For example, if you\'re creating a new user, have your "store" endpoint return a redirect back to a standard GET endpoint, such as your user index page.'),Object(l.b)("p",null,"Inertia will automatically follow this redirect and update the page accordingly. Here's a simplified example."),Object(l.b)(p.a,{examples:[{name:"Laravel",language:"php",code:u()(h())},{name:"Rails",language:"ruby",code:u()(f())}],mdxType:"TabbedCodeExamples"}),Object(l.b)("h2",null,"303 response code"),Object(l.b)("p",null,"Note, when redirecting after a ",Object(l.b)("inlineCode",{parentName:"p"},"PUT"),", ",Object(l.b)("inlineCode",{parentName:"p"},"PATCH")," or ",Object(l.b)("inlineCode",{parentName:"p"},"DELETE")," request you must use a ",Object(l.b)("inlineCode",{parentName:"p"},"303")," response code, otherwise the subsequent request will not be treated as a ",Object(l.b)("inlineCode",{parentName:"p"},"GET")," request. A ",Object(l.b)("inlineCode",{parentName:"p"},"303")," redirect is the same as a ",Object(l.b)("inlineCode",{parentName:"p"},"302")," except that the follow-up request is explicitly changed to a ",Object(l.b)("inlineCode",{parentName:"p"},"GET")," request."),Object(l.b)("p",null,"If you're using one of our official server-side adapters, redirects will automatically be converted."),Object(l.b)("h2",null,"External redirects"),Object(l.b)("p",null,"Sometimes it's necessary to redirect to an external website, or even another non-Inertia endpoint in your app, within an Inertia request. This is possible using a server-side initiated ",Object(l.b)("inlineCode",{parentName:"p"},"window.location")," visit."),Object(l.b)(p.a,{examples:[{name:"Laravel",language:"php",code:u()(m())},{name:"Rails",language:"ruby",code:u()(b())}],mdxType:"TabbedCodeExamples"}),Object(l.b)("p",null,"This will generate a ",Object(l.b)("inlineCode",{parentName:"p"},"409 Conflict")," response, which includes the destination URL in the ",Object(l.b)("inlineCode",{parentName:"p"},"X-Inertia-Location")," header. Client-side, Inertia will detect this response and automatically do a ",Object(l.b)("inlineCode",{parentName:"p"},"window.location = url")," visit."))}w.isMDXComponent=!0},xgJ6:function(e,n,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/redirects",function(){return r("bzJn")}])}},[["xgJ6",0,2,5,1,3,4]]]);