_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[10],{"59oN":function(t,e,n){"use strict";var o=n("q1tI"),a=n.n(o),i=n("qKvR");a.a.createElement;e.a=function(t){var e=t.children;return Object(i.a)("div",{className:"my-8 px-6 py-4 text-orange-900 text-base leading-normal bg-orange-200 rounded-r border-l-4 border-orange-400",children:e})}},NjC4:function(t,e,n){"use strict";n.r(e),n.d(e,"meta",(function(){return c})),n.d(e,"default",(function(){return p}));var o=n("wx14"),a=n("Ff2n"),i=n("q1tI"),r=n.n(i),s=n("7ljp"),u=(n("B+lO"),n("5Yp1")),c=(n("59oN"),n("SrvX"),n("qKvR"),r.a.createElement,{title:"Authentication"}),d={meta:c},l=u.b;function p(t){var e=t.components,n=Object(a.a)(t,["components"]);return Object(s.b)(l,Object(o.a)({},d,n,{components:e,mdxType:"MDXLayout"}),Object(s.b)("h1",null,"Authentication"),Object(s.b)("p",null,"One of the benefits of using Inertia is that you don't need a special authentication system to connect to your data provider (API), such as OAuth. Also, since your data is provided via your controllers, and housed on the same domain as your JavaScript components, you don't have to worry about setting up CORS."),Object(s.b)("p",null,"Rather, with Inertia you can simply use whatever authentication system your server-side framework ships with. Typically this will be a session based auth system."))}p.isMDXComponent=!0},qP1F:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/authentication",function(){return n("NjC4")}])}},[["qP1F",0,2,5,1,3,4]]]);