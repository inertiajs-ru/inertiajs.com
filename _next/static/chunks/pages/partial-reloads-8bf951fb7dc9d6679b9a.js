_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[25],{"59oN":function(e,n,a){"use strict";var t=a("q1tI"),r=a.n(t),i=a("qKvR");r.a.createElement;n.a=function(e){var n=e.children;return Object(i.a)("div",{className:"my-8 px-6 py-4 text-orange-900 text-base leading-normal bg-orange-200 rounded-r border-l-4 border-orange-400",children:n})}},"5E79":function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/partial-reloads",function(){return a("iDYi")}])},iDYi:function(e,n,a){"use strict";a.r(n),a.d(n,"meta",(function(){return j})),a.d(n,"default",(function(){return O}));var t=a("h4VS"),r=a("wx14"),i=a("Ff2n"),o=a("q1tI"),s=a.n(o),l=a("7ljp"),u=a("B+lO"),c=a.n(u),p=a("5Yp1"),d=a("59oN"),m=a("SrvX");a("qKvR"),s.a.createElement;function b(){var e=Object(t.a)(["\n        class UsersController < ApplicationController\n          def index\n            render inertia: 'Users/Index', props: {\n              # Lazily evaluated (only run if required)\n              companies: -> {\n                Company.\n                  order(:name).\n                  as_json(only: [ :id, :name ])\n              },\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n              # Evaluated immediately\n              users: User.\n                order(:name).\n                paginate(params[:page]).\n                as_json(only: [ :id, :name ])\n            }\n          end\n        end\n      "]);return b=function(){return e},e}function h(){var e=Object(t.a)(["\n        class UsersController extends Controller\n        {\n            public function index()\n            {\n                return Inertia::render('Users/Index', [\n                    // Lazily evaluated (only run if required)\n                    'companies' => function () {\n                        return Company::orderBy('name')\n                            ->get('id', 'name');\n                    },\n                    // Evaluated immediately\n                    'users' => User::orderBy('name')\n                        ->select('id', 'name')\n                        ->paginate(),\n                ]);\n            }\n        }\n      "]);return h=function(){return e},e}function f(){var e=Object(t.a)(["\n        import { inertia, InertiaLink } from '@inertiajs/inertia-svelte'\n\n        <a href=\"/users?active=true\" use:inertia=\"{{ only: ['users'] }}\">Show active</a>\n\n        <InertiaLink href=\"/users?active=true\" only={['users']}>Show active</InertiaLink>\n      "],["\n        import { inertia, InertiaLink } from '@inertiajs/inertia-svelte'\\n\n        <a href=\"/users?active=true\" use:inertia=\"{{ only: ['users'] }}\">Show active</a>\\n\n        <InertiaLink href=\"/users?active=true\" only={['users']}>Show active</InertiaLink>\n      "]);return f=function(){return e},e}function y(){var e=Object(t.a)(["\n        import { InertiaLink } from '@inertiajs/inertia-react'\n\n        <InertiaLink href=\"/users?active=true\" only={['users']}>Show active</InertiaLink>\n      "],["\n        import { InertiaLink } from '@inertiajs/inertia-react'\\n\n        <InertiaLink href=\"/users?active=true\" only={['users']}>Show active</InertiaLink>\n      "]);return y=function(){return e},e}function v(){var e=Object(t.a)(['\n        <inertia-link href="/users?active=true" :only="[\'users\']">Show active</inertia-link>\n      ']);return v=function(){return e},e}var j={title:"Partial reloads",links:[{url:"#top",name:"Introduction"},{url:"#making-partial-reloads",name:"Making partial visits"},{url:"#lazy-data-evaluation",name:"Lazy data evaluation"}]},g={meta:j},w=p.b;function O(e){var n=e.components,a=Object(i.a)(e,["components"]);return Object(l.b)(w,Object(r.a)({},g,a,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h1",null,"Partial reloads"),Object(l.b)("p",null,"When making visits to the same page, it's not always necessary to fetch all of the data required for that page from the server again. In fact, selecting only a subset of the data can be a helpful performance optimization if it's acceptable that some page data becomes stale. This is possible to do in Inertia with the \"partial reloads\" feature."),Object(l.b)("p",null,"As an example, consider a user index page that includes a list of users, as well as an option to filter the users by their company. On the first request to the user index page both the ",Object(l.b)("inlineCode",{parentName:"p"},"users")," and ",Object(l.b)("inlineCode",{parentName:"p"},"companies")," data is passed to the page component. However, on subsequent visits to the same page (maybe to filter the users), you can request only the ",Object(l.b)("inlineCode",{parentName:"p"},"users")," data from the server, and not the ",Object(l.b)("inlineCode",{parentName:"p"},"companies")," data. Inertia will then automatically merge the partial data returned from the server with the data it already has in memory client-side."),Object(l.b)(d.a,{mdxType:"Notice"},"Partial reloads only work for visits made to the same page component."),Object(l.b)("h2",null,"Making partial visits"),Object(l.b)("p",null,"To perform a partial reload, use the ",Object(l.b)("inlineCode",{parentName:"p"},"only")," property to set which data you want returned from the server. This takes an array of keys, which corresponds to the keys of the props."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import { Inertia } from '@inertiajs/inertia'\n\nInertia.visit(url, {\n  only: ['users'],\n})\n")),Object(l.b)("p",null,"Since partial reloads can only be made to the same page component, it almost always makes sense to just use the ",Object(l.b)("inlineCode",{parentName:"p"},"Inertia.reload()")," method, which automatically uses the current URL."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import { Inertia } from '@inertiajs/inertia'\n\nInertia.reload({ only: ['users'] })\n")),Object(l.b)("p",null,"It's also possible to perform partial reloads with Inertia links using the ",Object(l.b)("inlineCode",{parentName:"p"},"only")," property."),Object(l.b)(m.a,{examples:[{name:"Vue.js",language:"twig",code:c()(v()),description:"The <inertia-link> component is automatically registered by the Inertia plugin."},{name:"React",language:"jsx",code:c()(y())},{name:"Svelte",language:"jsx",code:c()(f())}],mdxType:"TabbedCodeExamples"}),Object(l.b)("h2",null,"Lazy data evaluation"),Object(l.b)("p",null,"For partial reloads to be most effective, be sure to also use lazy data evaluation server-side. This is done by wrapping all optional page data in a closure."),Object(l.b)("p",null,"When Inertia performs a visit, it will determine which data is required, and only then will it evaluate the closure. This can significantly increase the performance of pages with a lot of optional data."),Object(l.b)(m.a,{examples:[{name:"Laravel",language:"php",code:c()(h())},{name:"Rails",language:"ruby",code:c()(b())}],mdxType:"TabbedCodeExamples"}))}O.isMDXComponent=!0}},[["5E79",0,2,5,1,3,4]]]);